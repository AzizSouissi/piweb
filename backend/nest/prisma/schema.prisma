generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                              String             @id @default(auto()) @map("_id") @db.ObjectId
  firstName                       String
  lastName                        String
  basicSalary                     Int
  offDays                         Int
  payrolls                        Payroll[]
  attendanceRecord                AttendanceRecord[]
  familySituation                 String
  childrenUnder20Number           Int
  universityStudentChildrenNumber Int
  crippledChildrenNumber          Int
}

model Payroll {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  user          User        @relation(fields: [userId], references: [id])
  userId        String      @db.ObjectId
  month         DateTime
  basicSalary   Float
  cnssdeduction Float
  taxableSalary Float
  irpp          Float
  css           Float
  allowances    Allowance[]
  deductions    Deduction[]
  netSalary     Int
}

model Allowance {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  payroll     Payroll @relation(fields: [payrollId], references: [id])
  payrollId   String  @db.ObjectId
  description String
  amount      Float
}

model Deduction {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  payroll     Payroll @relation(fields: [payrollId], references: [id])
  payrollId   String  @db.ObjectId
  description String
  amount      Float
}

model Notification {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  recipientId String
  content     String
  category    String
  readAt      DateTime?
  canceledAt  DateTime?
  createdAt   DateTime  @default(now())
}

model AttendanceRecord {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  date         DateTime
  shiftType    ShiftType
  status       Status
  absentReason String?
  user         User      @relation(fields: [userId], references: [id])
  userId       String    @db.ObjectId
  attendanceId String?   @db.ObjectId
}

model Config {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  companyName  String
  cnssrib      String
  payDay       DateTime
  delayPayment Int
  cssrate      Int
}

enum Status {
  PRESENT
  ABSENT
}

enum ShiftType {
  FULL_DAY
  HALF_DAY
  QUARTER_SHIFT
}
