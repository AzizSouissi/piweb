// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  firstname String?
  lastname  String?
  address   String?
  birthday  String?
  degree    String?
  number    Int?
  job       String?
  image     String?
  hash      String
  hashedAt  String?
  hashedRt  String?

  roleId String[] @db.ObjectId
  roles  Role[]   @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  privilegeId String[]    @db.ObjectId
  privileges  Privilege[] @relation(fields: [privilegeId], references: [id])

  userId String[] @db.ObjectId
  users  User[]   @relation(fields: [userId], references: [id])

  @@map("roles")
}

model Privilege {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  roleId String[] @db.ObjectId
  roles  Role[]   @relation(fields: [roleId], references: [id])

  @@map("privileges")
}

model PasswordResetToken {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  token      String
  email      String
  expiryDate String
}
